import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useForm } from 'react-hook-form';
import { signupSchama, SignupVariables } from '../common/validation/auth';
import Navbar from '../components/Navbar';
import { zodResolver } from '@hookform/resolvers/zod';
import { trpc } from '../common/client/trpc';
import { useCallback } from 'react';
import Input from '../components/Input';

const Signup: NextPage = () => {

  const router = useRouter();
  const { register, handleSubmit, formState: { errors } } = useForm<SignupVariables>({
    resolver: zodResolver(signupSchama)
  });

  const { mutateAsync, isError, error } = trpc.useMutation(['user.signup']);

  const onSubmit = useCallback(async (data: SignupVariables) => {
    try {
      const result = await mutateAsync(data);
      if(result.status ===201) {
        router.push('/login');
      }
    }catch(e) {
      console.log(e);
    }
    
  }, [mutateAsync, router]);

  return (
    <>
      {
        isError && <div className="toast toast-top toast-start">
          <div className="alert alert-error">
            <div>
              <span>{error.message}</span>
            </div>
          </div>
        </div>
      }
      <Head>
        <title>nts - Signup</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="min-h-screen bg-base-200 w-screen flex flex-col items-center">
        <Navbar />
        <form
          noValidate
          onSubmit={handleSubmit(onSubmit)}
          className="flex pt-20 items-center justify-center"
        >
          <div className="card rounded-none w-96 bg-base-100 shadow-xl">
            <div className="card-body">
              <h2 className="card-title">
                Create an account!
              </h2>
              <Input 
                label="Your username" 
                placeholder="jsmith" 
                hookFormProps={register('username')}
                error={errors.username}
              />
              <Input 
                label="Your email" 
                type="email"
                placeholder="jsmith@gmail.com" 
                hookFormProps={register('email')}
                error={errors.email}
              />
              <Input 
                label="Your password" 
                type="password"
                placeholder="*****" 
                hookFormProps={register('password')}
                error={errors.password}
              />
              <div className="card-actions items-center justify-between">
                <Link href="/login">
                  <a className="link">Go to login</a>
                </Link>
                <button className="btn btn-primary" type="submit">
                  Sign Up
                </button>
              </div>
            </div>
          </div>
        </form>
      </div>
    </>
    
  );
};

export default Signup;
